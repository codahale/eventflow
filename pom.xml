<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.eventflow</groupId>
  <artifactId>eventflow-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>eventflow-parent</name>
  <packaging>pom</packaging>
  <url>https://github.com/codahale/eventflow</url>
  <description>
    A high-throughput, low-latency, GCP-native, analytical
    event pipeline.
  </description>

  <modules>
    <module>eventflow-common</module>
    <module>eventflow-ingest</module>
    <module>eventflow-publisher</module>
    <module>eventflow-testing-beam</module>
    <module>eventflow-timeseries-api</module>
    <module>eventflow-timeseries-rollups</module>
    <module>eventflow-timeseries-srv</module>
  </modules>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <inceptionYear>2020</inceptionYear>
  <scm>
    <connection>scm:git:https://github.com/codahale/eventflow.git</connection>
    <developerConnection>scm:git:https://github.com/codahale/eventflow.git
    </developerConnection>
    <url>https://github.com/codahale/eventflow</url>
    <tag>HEAD</tag>
  </scm>

  <developers>
    <developer>
      <name>Coda Hale</name>
      <email>coda.hale@gmail.com</email>
      <timezone>America/Denver</timezone>
      <url>https://codahale.com/</url>
    </developer>
  </developers>

  <properties>
    <!-- Make builds reproducible. Use zero for the timestamp. -->
    <project.build.outputTimestamp>1970-01-01T00:00:00Z</project.build.outputTimestamp>

    <!-- Build everything using Java 11. -->
    <maven.compiler.release>11</maven.compiler.release>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>

    <!-- Always use UTF-8. -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <protobuf.version>3.15.2</protobuf.version>
    <slf4j.version>1.7.30</slf4j.version>
    <grpc.version>1.35.0</grpc.version>
    <opencensus.version>0.28.0</opencensus.version>
    <truth.version>1.1.2</truth.version>
    <mockito.version>3.8.0</mockito.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- BOMs -->
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>2.12.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.google.cloud</groupId>
        <artifactId>google-cloud-bom</artifactId>
        <version>0.147.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-bom</artifactId>
        <version>${protobuf.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava-bom</artifactId>
        <version>30.1-jre</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-bom</artifactId>
        <version>${grpc.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.beam</groupId>
        <artifactId>beam-sdks-java-bom</artifactId>
        <version>2.28.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>2.14.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- SLF4J -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-jdk14</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13.2</version>
      </dependency>
      <dependency>
        <groupId>com.google.truth</groupId>
        <artifactId>truth</artifactId>
        <version>${truth.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.truth.extensions</groupId>
        <artifactId>truth-java8-extension</artifactId>
        <version>${truth.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.truth.extensions</groupId>
        <artifactId>truth-proto-extension</artifactId>
        <version>${truth.version}</version>
      </dependency>

      <!-- OpenCensus -->
      <dependency>
        <groupId>io.opencensus</groupId>
        <artifactId>opencensus-api</artifactId>
        <version>${opencensus.version}</version>
      </dependency>
      <dependency>
        <groupId>io.opencensus</groupId>
        <artifactId>opencensus-contrib-grpc-metrics</artifactId>
        <version>${opencensus.version}</version>
      </dependency>
      <dependency>
        <groupId>io.opencensus</groupId>
        <artifactId>opencensus-contrib-grpc-util</artifactId>
        <version>${opencensus.version}</version>
      </dependency>
      <dependency>
        <groupId>io.opencensus</groupId>
        <artifactId>opencensus-contrib-http-util</artifactId>
        <version>${opencensus.version}</version>
      </dependency>
      <dependency>
        <groupId>io.opencensus</groupId>
        <artifactId>opencensus-contrib-log-correlation-log4j2</artifactId>
        <version>${opencensus.version}</version>
      </dependency>
      <dependency>
        <groupId>io.opencensus</groupId>
        <artifactId>opencensus-contrib-zpages</artifactId>
        <version>${opencensus.version}</version>
      </dependency>
      <dependency>
        <groupId>io.opencensus</groupId>
        <artifactId>opencensus-impl</artifactId>
        <version>${opencensus.version}</version>
      </dependency>
      <dependency>
        <groupId>io.opencensus</groupId>
        <artifactId>opencensus-impl-core</artifactId>
        <version>${opencensus.version}</version>
      </dependency>

      <!-- This version includes aarch64 libraries. -->
      <dependency>
        <groupId>org.xerial.snappy</groupId>
        <artifactId>snappy-java</artifactId>
        <version>1.1.8.4</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker-qual</artifactId>
      <version>3.10.0</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.truth</groupId>
      <artifactId>truth</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.truth.extensions</groupId>
      <artifactId>truth-java8-extension</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.truth.extensions</groupId>
      <artifactId>truth-proto-extension</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <!-- Use the latest versions of key plugins. -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <extensions>
      <!-- Detect OS for Protobuf/gRPC compiler artifact. -->
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.0</version>
      </extension>
    </extensions>

    <plugins>
      <!-- Compile Protobuf definitions, including gRPC services. -->
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>0.6.1</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
              <goal>compile-custom</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- TODO change these back to os.detected.classifier when they ship aarch64 binaries -->
          <protocArtifact>
            com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.name}-x86_64
          </protocArtifact>
          <pluginId>grpc-java</pluginId>
          <pluginArtifact>
            io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.name}-x86_64
          </pluginArtifact>
        </configuration>
      </plugin>

      <!-- Use the Error Prone compiler for static analysis. Include the Nullaway plugin. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <compilerArgs>
            <arg>-XDcompilePolicy=simple</arg>
            <arg>
              -Xplugin:ErrorProne
              <!-- Consider warnings as errors. -->
              -XepAllErrorsAsWarnings
              <!-- Don't analyze generated code. -->
              -XepDisableWarningsInGeneratedCode
              -XepExcludedPaths:.*/generated-sources/.*
              <!-- Consider NullAway findings errors. -->
              -Xep:NullAway:ERROR
              <!-- Analyze our own packages. -->
              -XepOpt:NullAway:AnnotatedPackages=io.eventflow
              <!-- Fields with these annotations are not null. -->
              -XepOpt:NullAway:ExcludedFieldAnnotations=org.mockito.Mock,org.mockito.Captor
              <!-- Don't analyze Protobuf packages. -->
              -XepOpt:NullAway:UnannotatedSubPackages=[a-zA-Z0-9.]*.pb
            </arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>2.5.1</version>
            </path>
            <path>
              <groupId>com.uber.nullaway</groupId>
              <artifactId>nullaway</artifactId>
              <version>0.8.0</version>
            </path>
            <path>
              <groupId>org.mockito</groupId>
              <artifactId>mockito-errorprone</artifactId>
              <version>${mockito.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <!-- Format all Java and XML source files. -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.8.1</version>
        <configuration>
          <!-- Only check files that have been changed. -->
          <ratchetFrom>origin/main</ratchetFrom>
          <java>
            <!-- Use the Google Java Format, plus a license header. -->
            <licenseHeader>
              <content><![CDATA[
/*
 * Copyright © $YEAR Coda Hale (coda.hale@gmail.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
              ]]></content>
            </licenseHeader>
            <googleJavaFormat>
              <version>1.9</version>
            </googleJavaFormat>
          </java>
          <!-- Format XML using the Eclipse WTP tools. Two spaces, 100 char width. -->
          <formats>
            <format>
              <includes>
                <include>**/pom.xml</include>
              </includes>
              <eclipseWtp>
                <type>XML</type>
                <files>
                  <file>xml.prefs</file>
                </files>
              </eclipseWtp>
            </format>
          </formats>
        </configuration>
        <!-- Check the formatting of everything on compile. -->
        <executions>
          <execution>
            <id>spotless-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>compile</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
