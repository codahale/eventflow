buildscript {
	repositories {
		mavenCentral()
	}
}

plugins {
	id 'idea'
	id 'java'
	id 'com.diffplug.spotless' version '5.7.0'
	id 'com.github.ben-manes.versions' version '0.34.0'
	id 'com.google.protobuf' version '0.8.13'
	id 'net.ltgt.errorprone' version '1.3.0'
}

def isNonStable = { String version ->
	def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
	def regex = /^[0-9,.v-]+(-r)?$/
	return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
	revision = 'release'
	rejectVersionIf {
		isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
	}
}

allprojects { p ->
	p.apply plugin: 'idea'
	p.apply plugin: 'java'
	p.apply plugin: 'com.diffplug.spotless'
	p.apply plugin: 'net.ltgt.errorprone'

	repositories {
		mavenCentral()
	}

	dependencies {
		errorprone 'com.google.errorprone:error_prone_core:2.4.0'
		errorprone 'com.uber.nullaway:nullaway:0.8.0'
	}

	sourceCompatibility = 11
	targetCompatibility = 11

	afterEvaluate {
		tasks.withType(JavaCompile).configureEach {
			options.compilerArgs.addAll(['--release', '11'])
			options.errorprone.disableWarningsInGeneratedCode = true
			options.errorprone.excludedPaths = '.*/generated/.*'
			options.errorprone {
				option 'NullAway:AnnotatedPackages', 'io.eventflow'
				option 'NullAway:ExcludedFieldAnnotations', 'org.mockito.Mock,org.mockito.Captor'
			}
		}
	}

	spotless {
		java {
			googleJavaFormat('1.9')
			target project.fileTree(project.projectDir) {
				include '**/*.java'
				exclude '**/build/**'
			}
		}

		groovyGradle {
			greclipse()
		}
	}
}
